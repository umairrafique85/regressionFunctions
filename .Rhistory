vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD)) %>%
select_if(is.character)
df_forModel <- df_factors %>%
mutate(y = vec_y)
paste("y ~", paste(names(df_factors), collapse = " + "))
}
testFunction(df_test, "measurement")
testFunction <- function(df, KEYWORD) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD)) %>%
select_if(is.factor)
df_forModel <- df_factors %>%
mutate(y = vec_y)
paste("y ~", paste(names(df_factors), collapse = " + "))
}
testFunction(df_test, "measurement")
testFunction <- function(df, KEYWORD) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD)) %>%
select_if(is.factor | is.character)
df_forModel <- df_factors %>%
mutate(y = vec_y)
paste("y ~", paste(names(df_factors), collapse = " + "))
}
testFunction(df_test, "measurement")
sapply(df_test, class)
testFunction <- function(df, KEYWORD) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD)) %>%
select_if(is.numeric)
df_forModel <- df_factors %>%
mutate(y = vec_y)
paste("y ~", paste(names(df_factors), collapse = " + "))
}
testFunction(df_test, "measurement")
testFunction <- function(df, KEYWORD) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD)) %>%
select_if(negate(is.numeric))
df_forModel <- df_factors %>%
mutate(y = vec_y)
paste("y ~", paste(names(df_factors), collapse = " + "))
}
testFunction(df_test, "measurement")
as.formula("(x1 + x2 + x3)^2")
lm(as.formula("y ~ (x1 + x2 + x3)^2"), data = df_test)
y <- rowMeans(df_test[, 5:6])
lm(as.formula("y ~ (x1 + x2 + x3)^2"), data = df_test)
vec_numTest <- c("x1", "x2", "x4")
paste("poly(", paste(vec_numTest, ", 2) + poly("), ", 2")
paste("poly(", paste(vec_numTest, collapse = ", 2) + poly("), ", 2")
paste("poly(", paste(vec_numTest, collapse = ", 2) + poly("), ", 2)")
vec_numTest = "x1"
paste("poly(", paste(vec_numTest, collapse = ", 2) + poly("), ", 2)")
vec_numTest <- c("x1", "x2", "x4")
?if
?Control
RegrMean <- function(df, KEYWORD, regressionOrder = 1, towayInteractions = FALSE) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD))
df_factors %>%
names() -> vec_allFactors
df_factors %>%
select_if(is.numeric) %>%
names() -> vec_numerics
df_factors %>%
select_if(negate(is.numeric)) %>%
names() -> vec_categoricals
if (regressionOrder == 2) {
if (towayInteractions) {
str_formula <- paste("y ~ ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""), " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " "
)
} else {
str_formula <- paste("y ~ ",
paste("poly(",
paste(vec_numerics, collapse = ", 2) + poly("),
", 2)"),
" + ", paste(vec_categoricals, collapse = " + "))
}
} else if (towayInteractions & regressionOrder == 1) {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""))
} else {
str_formula <- paste("y ~", paste(vec_allFactors, collapse = " + "))
}
browser()
df_forModel <- df_factors %>%
mutate(y = vec_y)
model <- lm(as.formula(str_formula),
data = df_forModel)
dfRegrMean <- data.frame("Term" = rownames(summary(model)$coefficients),
"Coef" = summary(model)$coefficients[,1],
"SEcoef" = summary(model)$coefficients[,2],
"tvalue" = summary(model)$coefficients[,3],
"pvalue" = summary(model)$coefficients[,4])
vec_residuals <- model$residuals
vec_stdResiduals <- model$residuals / sd(model$residuals)
dfRegrResiduals <- df %>%
mutate(Residuals = vec_residuals,
StdResiduals = vec_stdResiduals)
lst_return <- list(dfRegrMean = dfRegrMean,
dfRegrResiduals = dfRegrResiduals,
Rsq = summary(model)$r.squared,
Rsqadj = summary(model)$adj.r.squared,
MSE = mean(vec_residuals^2),
SSE = sum(vec_residuals^2))
return(lst_return)
}
results <- RegrMean(df_test, "measurement")
str_formula
results <- RegrMean(df_test, "measurement", regressionOrder = 2)
str_formula
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
str_formula
results <- RegrMean(df_test, "measurement", regressionOrder = 1, towayInteractions = TRUE)
str_formula
RegrMean <- function(df, KEYWORD, regressionOrder = 1, towayInteractions = FALSE) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD))
df_factors %>%
names() -> vec_allFactors
df_factors %>%
select_if(is.numeric) %>%
names() -> vec_numerics
df_factors %>%
select_if(negate(is.numeric)) %>%
names() -> vec_categoricals
if (regressionOrder == 2) {
if (towayInteractions) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""), " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
} else {
str_formula <- paste("y ~ ",
vec_categoricals, " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
}
} else {
str_formula <- paste("y ~ ",
paste("poly(",
paste(vec_numerics, collapse = ", 2) + poly("),
", 2)"),
" + ", paste(vec_categoricals, collapse = " + "))
}
} else if (towayInteractions & regressionOrder == 1) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""))
} else {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
vec_categoricals)
}
} else {
str_formula <- paste("y ~", paste(vec_allFactors, collapse = " + "))
}
browser()
df_forModel <- df_factors %>%
mutate(y = vec_y)
model <- lm(as.formula(str_formula),
data = df_forModel)
dfRegrMean <- data.frame("Term" = rownames(summary(model)$coefficients),
"Coef" = summary(model)$coefficients[,1],
"SEcoef" = summary(model)$coefficients[,2],
"tvalue" = summary(model)$coefficients[,3],
"pvalue" = summary(model)$coefficients[,4])
vec_residuals <- model$residuals
vec_stdResiduals <- model$residuals / sd(model$residuals)
dfRegrResiduals <- df %>%
mutate(Residuals = vec_residuals,
StdResiduals = vec_stdResiduals)
lst_return <- list(dfRegrMean = dfRegrMean,
dfRegrResiduals = dfRegrResiduals,
Rsq = summary(model)$r.squared,
Rsqadj = summary(model)$adj.r.squared,
MSE = mean(vec_residuals^2),
SSE = sum(vec_residuals^2))
return(lst_return)
}
results <- RegrMean(df_test, "measurement", regressionOrder = 1, towayInteractions = TRUE)
str_formula
results <- RegrMean(df_test, "measurement")
str_formula
results <- RegrMean(df_test, "measurement", regressionOrder = 2)
str_formula
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
str_formula
df_test$x5 <- sample(c("red", "yellow", "green"), 1000, replace = TRUE)
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
str_formula
results <- RegrMean(df_test, "measurement" towayInteractions = TRUE)
results <- RegrMean(df_test, "measurement", towayInteractions = TRUE)
str_formula
RegrMean <- function(df, KEYWORD, regressionOrder = 1, towayInteractions = FALSE) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD))
df_factors %>%
names() -> vec_allFactors
df_factors %>%
select_if(is.numeric) %>%
names() -> vec_numerics
df_factors %>%
select_if(negate(is.numeric)) %>%
names() -> vec_categoricals
if (regressionOrder == 2) {
if (towayInteractions) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""), " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
} else {
str_formula <- paste("y ~ ",
vec_categoricals, " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
}
} else {
str_formula <- paste("y ~ ",
paste("poly(",
paste(vec_numerics, collapse = ", 2) + poly("),
", 2)"),
" + ", paste(vec_categoricals, collapse = " + "))
}
} else if (towayInteractions & regressionOrder == 1) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""))
} else {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
vec_categoricals)
}
} else {
str_formula <- paste("y ~", paste(vec_allFactors, collapse = " + "))
}
df_forModel <- df_factors %>%
mutate(y = vec_y)
model <- lm(as.formula(str_formula),
data = df_forModel)
regTerms <- rownames(summary(model)$coefficients)
dfRegrMean <- data.frame("Term" = regTerms,
"Coef" = summary(model)$coefficients[,1],
"SEcoef" = summary(model)$coefficients[,2],
"tvalue" = summary(model)$coefficients[,3],
"pvalue" = summary(model)$coefficients[,4])
vec_residuals <- model$residuals
vec_stdResiduals <- model$residuals / sd(model$residuals)
dfRegrResiduals <- df %>%
mutate(Residuals = vec_residuals,
StdResiduals = vec_stdResiduals)
lst_return <- list(dfRegrMean = dfRegrMean,
dfRegrResiduals = dfRegrResiduals,
Rsq = summary(model)$r.squared,
Rsqadj = summary(model)$adj.r.squared,
MSE = mean(vec_residuals^2),
SSE = sum(vec_residuals^2),
flag = FALSE)
return(lst_return)
}
results <- RegrMean(df_test, "measurement", towayInteractions = TRUE)
View(results$dfRegrMean)
termsTest <- results$dfRegrMean$Term
gsub("[:]", "*", termsTest)
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
vec_x2 <- sample(seq(0, 1.3, by = 0.1), size = 1000, replace = TRUE)
df_test$x2 <- vec_x2
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
vec_x4 <- sample(c(5.546, 5.5, by = 0.01), 1000, replace = TRUE)
df_test$x4 <- vec_x4
results <- RegrMean(df_test, "measurement", regressionOrder = 2, towayInteractions = TRUE)
termsTest <- results$dfRegrMean$Term
gsub("[:]", "*", termsTest)
gsub("^poly(", "", termsTest)
gsub("^poly\\(", "", termsTest)
gsub(", 2)", "^", termsTest)
gsub(", 2)2", "^2", gsub("^poly\\(", "", termsTest), fixed = TRUE)
gsub(", 2)1", "", gsub(", 2)2", "^2", gsub("^poly\\(", "", termsTest), fixed = TRUE), fixed = TRUE)
RegrMean <- function(df, KEYWORD, regressionOrder = 1, towayInteractions = FALSE) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD))
df_factors %>%
names() -> vec_allFactors
df_factors %>%
select_if(is.numeric) %>%
names() -> vec_numerics
df_factors %>%
select_if(negate(is.numeric)) %>%
names() -> vec_categoricals
if (regressionOrder == 2) {
if (towayInteractions) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""), " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
} else {
str_formula <- paste("y ~ ",
vec_categoricals, " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
}
} else {
str_formula <- paste("y ~ ",
paste("poly(",
paste(vec_numerics, collapse = ", 2) + poly("),
", 2)"),
" + ", paste(vec_categoricals, collapse = " + "))
}
} else if (towayInteractions & regressionOrder == 1) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""))
} else {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
vec_categoricals)
}
} else {
str_formula <- paste("y ~", paste(vec_allFactors, collapse = " + "))
}
df_forModel <- df_factors %>%
mutate(y = vec_y)
model <- lm(as.formula(str_formula),
data = df_forModel)
regTerms <- gsub("[:]", "*", rownames(summary(model)$coefficients))
regTerms <- gsub(", 2)1", "", gsub(", 2)2", "^2",
gsub("^poly\\(", "", regTerms),
fixed = TRUE), fixed = TRUE)
dfRegrMean <- data.frame("Term" = regTerms,
"Coef" = summary(model)$coefficients[,1],
"SEcoef" = summary(model)$coefficients[,2],
"tvalue" = summary(model)$coefficients[,3],
"pvalue" = summary(model)$coefficients[,4])
vec_residuals <- model$residuals
vec_stdResiduals <- model$residuals / sd(model$residuals)
dfRegrResiduals <- df %>%
mutate(Residuals = vec_residuals,
StdResiduals = vec_stdResiduals)
lst_return <- list(dfRegrMean = dfRegrMean,
dfRegrResiduals = dfRegrResiduals,
Rsq = summary(model)$r.squared,
Rsqadj = summary(model)$adj.r.squared,
MSE = mean(vec_residuals^2),
SSE = sum(vec_residuals^2),
flag = FALSE)
return(lst_return)
}
results <- RegrMean(df_test, "measurement")
View(results$dfRegrMean)
results <- RegrMean(df_test, "measurement", regressionOrder = 2)
View(results$dfRegrMean)
View(results$dfRegrResiduals)
?try
RegrMean <- function(df, KEYWORD, regressionOrder = 1, towayInteractions = FALSE) {
vec_y <- df %>%
select(contains(KEYWORD)) %>%
rowMeans()
df_factors <- df %>%
select(-contains(KEYWORD))
df_factors %>%
names() -> vec_allFactors
df_factors %>%
select_if(is.numeric) %>%
names() -> vec_numerics
df_factors %>%
select_if(negate(is.numeric)) %>%
names() -> vec_categoricals
if (regressionOrder == 2) {
if (towayInteractions) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""), " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
} else {
str_formula <- paste("y ~ ",
vec_categoricals, " + ",
paste("poly(", paste(vec_numerics, collapse = ", 2) + poly("), ", 2)"),
sep = " ")
}
} else {
str_formula <- paste("y ~ ",
paste("poly(",
paste(vec_numerics, collapse = ", 2) + poly("),
", 2)"),
" + ", paste(vec_categoricals, collapse = " + "))
}
} else if (towayInteractions & regressionOrder == 1) {
if (length(vec_categoricals) > 1) {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
paste("(",
paste(vec_categoricals, collapse = " + "),
")^2", sep = ""))
} else {
str_formula <- paste("y ~ ",
paste(vec_numerics, collapse = " + "),
" + ",
vec_categoricals)
}
} else {
str_formula <- paste("y ~", paste(vec_allFactors, collapse = " + "))
}
df_forModel <- df_factors %>%
mutate(y = vec_y)
tryCatch(
{
model <- lm(as.formula(str_formula),
data = df_forModel)
regTerms <- gsub("[:]", "*", rownames(summary(model)$coefficients))
regTerms <- gsub(", 2)1", "", gsub(", 2)2", "^2",
gsub("^poly\\(", "", regTerms),
fixed = TRUE), fixed = TRUE)
dfRegrMean <- data.frame("Term" = regTerms,
"Coef" = summary(model)$coefficients[,1],
"SEcoef" = summary(model)$coefficients[,2],
"tvalue" = summary(model)$coefficients[,3],
"pvalue" = summary(model)$coefficients[,4])
rownames(dfRegrMean) <- NULL
vec_residuals <- model$residuals
vec_stdResiduals <- model$residuals / sd(model$residuals)
dfRegrResiduals <- df %>%
mutate(Residuals = vec_residuals,
StdResiduals = vec_stdResiduals)
lst_return <- list(dfRegrMean = dfRegrMean,
dfRegrResiduals = dfRegrResiduals,
Rsq = summary(model)$r.squared,
Rsqadj = summary(model)$adj.r.squared,
MSE = mean(vec_residuals^2),
SSE = sum(vec_residuals^2),
flag = FALSE)
},
error = function(errorMessage) {
lst_return <- list(
flag = TRUE,
errorMessage = errorMessage
)
}
)
return(lst_return)
}
results <- RegrMean(df_test, "measurement", regressionOrder = 2)
View(results$dfRegrMean)
View(results$dfRegrResiduals)
library(carData)
data("Blackmore")
View(Blackmore)
